{"version":3,"sources":["webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html"],"names":["routes","path","component","AuthRoutingModule","forChild","imports","exports","AuthModule","declarations","LoginComponent","authService","isLoading","authStatusSub","authStatusListener","subscribe","authStatus","form","invalid","login","value","email","password","unsubscribe","selector","templateUrl","styleUrls","SignupComponent","createUser"],"mappings":"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","file":"auth-auth-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}","import { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AngularMaterialModule } from '../angular-material.modules';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SignupComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule {}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription\r\n  \r\n  constructor(\r\n    public authService: AuthService\r\n    ) { }\r\n    \r\n    ngOnInit(): void {\r\n    this.authStatusSub = this.authService.authStatusListener.subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        matInput\r\n        ngModel\r\n        #emailInput=\"ngModel\"\r\n        placeholder=\"E-Mail\"\r\n        required\r\n        email\r\n      >\r\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        matInput\r\n        ngModel\r\n        #passwordInput=\"ngModel\"\r\n        placeholder=\"Password\"\r\n        required\r\n      >\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"accent\" type=\"submit\">Login</button>\r\n  </form>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription\r\n  \r\n  constructor(\r\n    public authService: AuthService\r\n    ) { }\r\n    \r\n    ngOnInit(): void {\r\n    this.authStatusSub = this.authService.authStatusListener.subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignup(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        matInput\r\n        ngModel\r\n        #emailInput=\"ngModel\"\r\n        placeholder=\"E-Mail\"\r\n        required\r\n        email\r\n      >\r\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        matInput\r\n        ngModel\r\n        #passwordInput=\"ngModel\"\r\n        placeholder=\"Password\"\r\n        required\r\n      >\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"accent\" type=\"submit\">Signup</button>\r\n  </form>\r\n</mat-card>\r\n"]}