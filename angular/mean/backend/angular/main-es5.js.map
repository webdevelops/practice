{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular-material.modules.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/error-interceptor.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/posts/post-create/mime-type.validator.ts","webpack:///src/app/posts/post-create/post-create.component.ts","webpack:///src/app/posts/post-create/post-create.component.html","webpack:///src/app/posts/post-list/post-list.component.ts","webpack:///src/app/posts/post-list/post-list.component.html","webpack:///src/app/posts/posts.module.ts","webpack:///src/app/posts/posts.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","routes","path","component","canActivate","loadChildren","m","AuthModule","AppRoutingModule","forRoot","imports","providers","AppComponent","authService","autoAuthUser","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","bootstrap","entryComponents","AuthInterceptor","next","authToken","getToken","authRequest","clone","headers","set","handle","AuthGuard","router","route","state","isAuth","getIsAuth","navigate","BACKEND_URL","apiUrl","AuthService","http","isAuthenticated","authStatusListener","token","userId","email","password","authData","post","subscribe","error","response","expiresInDuration","expiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveAuthData","authInformation","getAuthData","clearAuthData","clearTimeout","tokenTimer","duration","setTimeout","logout","localStorage","setItem","toString","removeItem","getItem","expiration","providedIn","ErrorInterceptor","dialog","pipe","errorMessage","message","console","log","open","data","ErrorComponent","HeaderComponent","userIsAuthenticated","authListenerSub","unsubscribe","mimeType","control","value","file","fileReader","FileReader","frObs","create","observer","addEventListener","arr","Uint8Array","result","subarray","header","isValid","i","length","invalidMimeType","complete","readAsArrayBuffer","PostCreateComponent","postsService","isLoading","mode","authStatusSub","authStatus","form","title","required","minLength","content","image","validators","asyncValidators","paramMap","has","postId","get","getPost","postData","_id","imagePath","setValue","event","target","files","patchValue","updateValueAndValidity","reader","onload","imagePreview","readAsDataURL","invalid","addPost","updatePost","reset","PostListComponent","posts","totalPosts","postsPerPage","currentPage","pageSizeOptions","getUserId","getPosts","postSub","postsUpdated","postCount","deletePost","pageData","pageIndex","pageSize","PostsModule","PostsService","postPerPage","queryParams","map","maxPosts","transformsPostData","FormData","append","creator","put","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PostListComponent },\r\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.autoAuthUser();\r\n  }\r\n}\r\n","<div>\r\n  <app-header></app-header>\r\n</div>\r\n\r\n<main>\r\n  <router-outlet></router-outlet>   \r\n</main>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AuthInterceptor } from './auth/auth-interceptor';\r\nimport { ErrorInterceptor } from './error-interceptor';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { AngularMaterialModule } from './angular-material.modules';\r\nimport { PostsModule } from './posts/posts.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ErrorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    PostsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n    });\r\n    // console.log('authRequest', authRequest);\r\n\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n    const isAuth = this.authService.getIsAuth();\r\n\r\n    if (!isAuth) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n\r\n    return isAuth;\r\n  }\r\n  \r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { AuthData } from './auth-data.module';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/user\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  public authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  // getAuthStatusListener() {\r\n  //   return this.authStatusListener.asObservable(); !!!\r\n  // }\r\n\r\n  createUser(email: string, password: string) {\r\n    const authData: AuthData = { email: email, password: password }\r\n    this.http.post(BACKEND_URL + '/signup', authData)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/']);\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const authData: AuthData = { email: email, password: password };\r\n    this.http.post<{ token: string, expiresIn: number, userId: string }>(BACKEND_URL + '/login', authData)\r\n      .subscribe(response => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        if (token) {\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n\r\n          this.userId = response.userId;\r\n          this.isAuthenticated = true;\r\n          this.authStatusListener.next(true);\r\n\r\n          const now = new Date();\r\n          const expirationDate = new Date(now.getTime() + response.expiresIn * 1000);\r\n          this.saveAuthData(token, expirationDate, this.userId);\r\n\r\n          this.router.navigate(['/']);\r\n        }\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.userId = authInformation.userId;\r\n      this.isAuthenticated = true;\r\n      this.authStatusListener.next(true);\r\n      this.setAuthTimer(expiresIn / 1000);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.userId = null;\r\n    this.clearAuthData();\r\n    clearTimeout(this.tokenTimer);\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private setAuthTimer(duration) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expirationDate.toString()); // toISOString()\r\n    localStorage.setItem('userId', userId);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('usreId');\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expiration = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    if (!token || !expiration) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      token,\r\n      expirationDate: new Date(expiration),\r\n      userId\r\n    }\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  intercept(req: import(\"@angular/common/http\").HttpRequest<any>, next: import(\"@angular/common/http\").HttpHandler): import(\"rxjs\").Observable<import(\"@angular/common/http\").HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'An unknown error occured!';\r\n\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        console.log('error', error)\r\n\r\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage} });\r\n        \r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: {message: string}\r\n  ) {}\r\n}","<h1 mat-dialog-title>An Error Occurred!</h1>\r\n\r\n<div mat-dialog-content>\r\n  <p class=\"mat-body-1\">{{ data.message }}</p>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Okey</button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  userIsAuthenticated = false;\r\n  private authListenerSub: Subscription;\r\n\r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    \r\n    // this.authListenerSub = this.authService.getAuthStatusListener()\r\n    //   .subscribe(isAuthenticated => {\r\n    //     this.userIsAuthenticated = isAuthenticated;\r\n    //   });\r\n    this.authListenerSub = this.authService.authStatusListener\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      })\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span> <a routerLink=\"/\">Blogger</a></span>\r\n  <span class=\"spancer\"></span>\r\n  <ul>\r\n    <li *ngIf=\"userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New Post</a>\r\n    </li>\r\n    <li *ngIf=\"!userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a>\r\n    </li>\r\n    <li *ngIf=\"!userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Signup</a>\r\n    </li>\r\n    <li *ngIf=\"userIsAuthenticated\">\r\n      <button mat-button (click)=\"onLogout()\">Logout</button>\r\n    </li>\r\n  </ul>\r\n</mat-toolbar>\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof (control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create((observer: Observer<{[key: string]: any}>) => {\r\n    fileReader.addEventListener('loadend', () => {\r\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n      let header = '';\r\n      let isValid = false;\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        header += arr[i].toString(16);\r\n        // console.log(\"header\", header)\r\n      }\r\n\r\n      switch (header) {\r\n        case \"89504e47\":\r\n          isValid = true;\r\n          break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false;\r\n          break;\r\n      }\r\n\r\n      // console.log(\"isValid\", isValid)\r\n\r\n      if (isValid) {\r\n        observer.next(null);\r\n\r\n      } else {\r\n        observer.next({invalidMimeType: true});\r\n      }\r\n      observer.complete();\r\n    });\r\n    fileReader.readAsArrayBuffer(file);\r\n  });\r\n\r\n  return frObs;\r\n};\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PostsService } from '../posts.service';\r\nimport { Post } from '../post.model';\r\nimport { mimeType } from './mime-type.validator';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.scss']\r\n})\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  // enteredTitle = '';\r\n  // enteredContent = '';\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  private mode = 'create';\r\n  private postId: string;\r\n  public post: Post;\r\n  private authStatusSub: Subscription\r\n\r\n  constructor(\r\n    public postsService: PostsService,\r\n    public route: ActivatedRoute,\r\n    public authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.authStatusListener.subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null, [Validators.required, Validators.minLength(3)]),\r\n      content: new FormControl(null, Validators.required),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      })\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 'edit';\r\n        this.postId = paramMap.get('postId');\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId)\r\n          .subscribe(postData => {\r\n          console.log(\"PostCreateComponent -> ngOnInit -> postData\", postData)\r\n            this.isLoading = false;\r\n            this.post = {\r\n              ...postData,\r\n              id: postData._id,\r\n              imagePath: postData.imagePath\r\n            };\r\n            this.form.setValue({\r\n              title: this.post.title,\r\n              content: this.post.content,\r\n              image: this.post.imagePath\r\n            });\r\n          });\r\n\r\n      } else {\r\n        this.mode = 'create';\r\n        this.postId = null;\r\n      }\r\n    })\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = (reader.result as string);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    if (this.mode === 'create') {\r\n      this.postsService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    }\r\n\r\n    else {\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      )\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n<mat-card class=\"card\">\r\n  <form (ngSubmit)=\"onSavePost()\" [formGroup]=\"form\" *ngIf=\"!isLoading\">\r\n    <mat-form-field class=\"card-field\">\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        formControlName=\"title\"\r\n        placeholder=\"Post Title\"\r\n      >\r\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter a post title.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div>\r\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\r\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\r\n    </div>\r\n\r\n    <div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\r\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n    </div>\r\n\r\n    <mat-form-field class=\"card-field\">\r\n      <textarea\r\n        matInput\r\n        rows=\"3\"\r\n        formControlName=\"content\"\r\n        placeholder=\"Post Content\"\r\n      ></textarea>\r\n      <mat-error *ngIf=\"form.get('content').invalid\">Please enter a post content.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"button\">\r\n      <button type=\"submit\" mat-raised-button color=\"accent\">Save Post</button>\r\n    </div>\r\n  </form>\r\n\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.scss']\r\n})\r\nexport class PostListComponent implements OnInit, OnDestroy {\r\n  posts: Post[] = [];\r\n  isLoading = false;\r\n  totalPosts = 0;\r\n  postsPerPage = 2;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1, 2, 5, 10];\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private postSub: Subscription;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(\r\n    public postsService: PostsService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.userId = this.authService.getUserId();\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n\r\n    this.postSub = this.postsService.postsUpdated\r\n      .subscribe((postData: { posts: Post[], postCount: number }) => {\r\n        this.isLoading = false;\r\n        this.totalPosts = postData.postCount;\r\n        this.posts = postData.posts;\r\n        // console.log(\"PostListComponent -> ngOnInit -> this.posts\", this.posts)\r\n      });\r\n\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n\r\n    // this.authStatusSub = this.authService\r\n    //   .getAuthStatusListener()\r\n    //   .subscribe(isAuthenticated => {\r\n    //     this.userIsAuthenticated = isAuthenticated;\r\n    //   });\r\n\r\n    this.authStatusSub = this.authService.authStatusListener\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n\r\n    // this.authService.autoAuthUser();\r\n  }\r\n\r\n  onDelete(postId: string) {\r\n    this.isLoading = true;\r\n    this.postsService.deletePost(postId).subscribe(() => {\r\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n    });\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent) {\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.postsPerPage = pageData.pageSize;\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.postSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0 && !isLoading\">\r\n  <mat-expansion-panel *ngFor=\"let post of posts\">\r\n    <mat-expansion-panel-header>\r\n      {{post.title}}\r\n    </mat-expansion-panel-header>\r\n    <div class=\"post-image\">\r\n      <img [src]=\"post.imagePath\" [alt]=\"post.title\">\r\n    </div>\r\n    <p>{{post.content}}</p>\r\n    <mat-action-row *ngIf=\"userIsAuthenticated && userId === post.creator\">\r\n      <a [routerLink]=\"['/edit', post.id]\" mat-button color=\"primary\">EDIT</a>\r\n      <button mat-button color=\"warn\" (click)=\"onDelete(post.id)\">DELETE</button>\r\n    </mat-action-row>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<mat-paginator\r\n  *ngIf=\"posts.length > 0\"\r\n  [length]=\"totalPosts\" \r\n  [pageSize]=\"postsPerPage\" \r\n  [pageSizeOptions]=\"pageSizeOptions\"\r\n  (page)=\"onChangedPage($event)\"\r\n></mat-paginator>\r\n\r\n<p *ngIf=\"posts.length <= 0 && !isLoading\" class=\"mat-body-strong text-center\">No posts added yet!</p>","import { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PostCreateComponent } from './post-create/post-create.component';\r\nimport { PostListComponent } from './post-list/post-list.component';\r\nimport { AngularMaterialModule } from '../angular-material.modules';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PostCreateComponent,\r\n    PostListComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class PostsModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Post } from './post.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/posts/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  public postsUpdated = new Subject<{ posts: Post[], postCount: number }>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { }\r\n\r\n  getPosts(postPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${postPerPage}&page=${currentPage}`;\r\n\r\n    this.http\r\n      .get<{ message: string, posts: any, maxPosts: number }>(BACKEND_URL + queryParams)\r\n      .pipe(map(postData => {\r\n        return {\r\n          posts: postData.posts.map(post => {\r\n          // console.log(\"PostsService -> getPosts -> post\", post)\r\n            return {\r\n              ...post,\r\n              id: post._id,\r\n              // creator: post.creator,\r\n              // imagePath: post.imagePath\r\n            };\r\n          }),\r\n          maxPosts: postData.maxPosts\r\n        };\r\n      }))\r\n      .subscribe(transformsPostData => {\r\n      // console.log(\"PostsService -> getPosts -> transformsPostData\", transformsPostData)\r\n        this.posts = transformsPostData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformsPostData.maxPosts\r\n        });\r\n      })\r\n  }\r\n\r\n  getPost(id: string) {\r\n    return this.http.get<{ _id: string, title: string, content: string, imagePath: string, creator: string }>(BACKEND_URL + id);\r\n  }\r\n\r\n  addPost(title: string, content: string, image: File) {\r\n    const postData = new FormData();\r\n    postData.append('title', title);\r\n    postData.append('content', content);\r\n    postData.append('image', image, title)\r\n\r\n    this.http\r\n      .post<{ message: string, post: Post }>(BACKEND_URL, postData)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  updatePost(id: string, title: string, content: string, image: File | string) {\r\n    let postData: Post | FormData;\r\n    if (typeof image === 'object') {\r\n      postData = new FormData();\r\n      postData.append('id', id);\r\n      postData.append('title', title);\r\n      postData.append('content', content);\r\n      postData.append('image', image, title);\r\n\r\n    } else {\r\n      postData = { id, title, content, imagePath: image, creator: null };\r\n    }\r\n\r\n    this.http\r\n      .put(BACKEND_URL + '/' + id, postData)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    return this.http.delete<{ message: string }>(BACKEND_URL + postId);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}