{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}","import { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { AngularMaterialModule } from '../angular-material.modules';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SignupComponent,\r\n    LoginComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    AuthRoutingModule\r\n  ]\r\n})\r\nexport class AuthModule {}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription\r\n  \r\n  constructor(\r\n    public authService: AuthService\r\n    ) { }\r\n    \r\n    ngOnInit(): void {\r\n    this.authStatusSub = this.authService.authStatusListener.subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n  <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        matInput\r\n        ngModel\r\n        #emailInput=\"ngModel\"\r\n        placeholder=\"E-Mail\"\r\n        required\r\n        email\r\n      >\r\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        matInput\r\n        ngModel\r\n        #passwordInput=\"ngModel\"\r\n        placeholder=\"Password\"\r\n        required\r\n      >\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"accent\" type=\"submit\">Login</button>\r\n  </form>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription\r\n  \r\n  constructor(\r\n    public authService: AuthService\r\n    ) { }\r\n    \r\n    ngOnInit(): void {\r\n    this.authStatusSub = this.authService.authStatusListener.subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignup(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    this.authService.createUser(form.value.email, form.value.password);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n  <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n    <mat-form-field>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        matInput\r\n        ngModel\r\n        #emailInput=\"ngModel\"\r\n        placeholder=\"E-Mail\"\r\n        required\r\n        email\r\n      >\r\n      <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input\r\n        name=\"password\"\r\n        type=\"password\"\r\n        matInput\r\n        ngModel\r\n        #passwordInput=\"ngModel\"\r\n        placeholder=\"Password\"\r\n        required\r\n      >\r\n      <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"accent\" type=\"submit\">Signup</button>\r\n  </form>\r\n</mat-card>\r\n"],"sourceRoot":"webpack:///"}