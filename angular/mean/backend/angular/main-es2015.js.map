{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.modules.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/error-interceptor.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/posts/post-create/mime-type.validator.ts","./src/app/posts/post-create/post-create.component.ts","./src/app/posts/post-create/post-create.component.html","./src/app/posts/post-list/post-list.component.ts","./src/app/posts/post-list/post-list.component.html","./src/app/posts/posts.module.ts","./src/app/posts/posts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatDialogModule,\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component';\r\nimport { PostListComponent } from './posts/post-list/post-list.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PostListComponent },\r\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.autoAuthUser();\r\n  }\r\n}\r\n","<div>\r\n  <app-header></app-header>\r\n</div>\r\n\r\n<main>\r\n  <router-outlet></router-outlet>   \r\n</main>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AuthInterceptor } from './auth/auth-interceptor';\r\nimport { ErrorInterceptor } from './error-interceptor';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { AngularMaterialModule } from './angular-material.modules';\r\nimport { PostsModule } from './posts/posts.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ErrorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    PostsModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    const authToken = this.authService.getToken();\r\n    const authRequest = req.clone({\r\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\r\n    });\r\n    // console.log('authRequest', authRequest);\r\n\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n    const isAuth = this.authService.getIsAuth();\r\n\r\n    if (!isAuth) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n\r\n    return isAuth;\r\n  }\r\n  \r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { AuthData } from './auth-data.module';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + \"/user\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private userId: string;\r\n  public authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  // getAuthStatusListener() {\r\n  //   return this.authStatusListener.asObservable(); !!!\r\n  // }\r\n\r\n  createUser(email: string, password: string) {\r\n    const authData: AuthData = { email: email, password: password }\r\n    this.http.post(BACKEND_URL + '/signup', authData)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/']);\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const authData: AuthData = { email: email, password: password };\r\n    this.http.post<{ token: string, expiresIn: number, userId: string }>(BACKEND_URL + '/login', authData)\r\n      .subscribe(response => {\r\n        const token = response.token;\r\n        this.token = token;\r\n        if (token) {\r\n          const expiresInDuration = response.expiresIn;\r\n          this.setAuthTimer(expiresInDuration);\r\n\r\n          this.userId = response.userId;\r\n          this.isAuthenticated = true;\r\n          this.authStatusListener.next(true);\r\n\r\n          const now = new Date();\r\n          const expirationDate = new Date(now.getTime() + response.expiresIn * 1000);\r\n          this.saveAuthData(token, expirationDate, this.userId);\r\n\r\n          this.router.navigate(['/']);\r\n        }\r\n      }, error => {\r\n        this.authStatusListener.next(false);\r\n      });\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.userId = authInformation.userId;\r\n      this.isAuthenticated = true;\r\n      this.authStatusListener.next(true);\r\n      this.setAuthTimer(expiresIn / 1000);\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    this.userId = null;\r\n    this.clearAuthData();\r\n    clearTimeout(this.tokenTimer);\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private setAuthTimer(duration) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('expiration', expirationDate.toString()); // toISOString()\r\n    localStorage.setItem('userId', userId);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expiration');\r\n    localStorage.removeItem('usreId');\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem('token');\r\n    const expiration = localStorage.getItem('expiration');\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    if (!token || !expiration) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      token,\r\n      expirationDate: new Date(expiration),\r\n      userId\r\n    }\r\n  }\r\n}\r\n","import { HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private dialog: MatDialog\r\n  ) { }\r\n\r\n  intercept(req: import(\"@angular/common/http\").HttpRequest<any>, next: import(\"@angular/common/http\").HttpHandler): import(\"rxjs\").Observable<import(\"@angular/common/http\").HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = 'An unknown error occured!';\r\n\r\n        if (error.error.message) {\r\n          errorMessage = error.error.message;\r\n        }\r\n        console.log('error', error)\r\n\r\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage} });\r\n        \r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, Inject } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: {message: string}\r\n  ) {}\r\n}","<h1 mat-dialog-title>An Error Occurred!</h1>\r\n\r\n<div mat-dialog-content>\r\n  <p class=\"mat-body-1\">{{ data.message }}</p>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Okey</button>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  userIsAuthenticated = false;\r\n  private authListenerSub: Subscription;\r\n\r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    \r\n    // this.authListenerSub = this.authService.getAuthStatusListener()\r\n    //   .subscribe(isAuthenticated => {\r\n    //     this.userIsAuthenticated = isAuthenticated;\r\n    //   });\r\n    this.authListenerSub = this.authService.authStatusListener\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      })\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authListenerSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <span> <a routerLink=\"/\">Blogger</a></span>\r\n  <span class=\"spancer\"></span>\r\n  <ul>\r\n    <li *ngIf=\"userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New Post</a>\r\n    </li>\r\n    <li *ngIf=\"!userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a>\r\n    </li>\r\n    <li *ngIf=\"!userIsAuthenticated\">\r\n      <a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Signup</a>\r\n    </li>\r\n    <li *ngIf=\"userIsAuthenticated\">\r\n      <button mat-button (click)=\"onLogout()\">Logout</button>\r\n    </li>\r\n  </ul>\r\n</mat-toolbar>\r\n","import { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof (control.value) === 'string') {\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create((observer: Observer<{[key: string]: any}>) => {\r\n    fileReader.addEventListener('loadend', () => {\r\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n      let header = '';\r\n      let isValid = false;\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        header += arr[i].toString(16);\r\n        // console.log(\"header\", header)\r\n      }\r\n\r\n      switch (header) {\r\n        case \"89504e47\":\r\n          isValid = true;\r\n          break;\r\n        case \"ffd8ffe0\":\r\n        case \"ffd8ffe1\":\r\n        case \"ffd8ffe2\":\r\n        case \"ffd8ffe3\":\r\n        case \"ffd8ffe8\":\r\n          isValid = true;\r\n          break;\r\n        default:\r\n          isValid = false;\r\n          break;\r\n      }\r\n\r\n      // console.log(\"isValid\", isValid)\r\n\r\n      if (isValid) {\r\n        observer.next(null);\r\n\r\n      } else {\r\n        observer.next({invalidMimeType: true});\r\n      }\r\n      observer.complete();\r\n    });\r\n    fileReader.readAsArrayBuffer(file);\r\n  });\r\n\r\n  return frObs;\r\n};\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PostsService } from '../posts.service';\r\nimport { Post } from '../post.model';\r\nimport { mimeType } from './mime-type.validator';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.scss']\r\n})\r\nexport class PostCreateComponent implements OnInit, OnDestroy {\r\n  // enteredTitle = '';\r\n  // enteredContent = '';\r\n  isLoading = false;\r\n  form: FormGroup;\r\n  imagePreview: string;\r\n  private mode = 'create';\r\n  private postId: string;\r\n  public post: Post;\r\n  private authStatusSub: Subscription\r\n\r\n  constructor(\r\n    public postsService: PostsService,\r\n    public route: ActivatedRoute,\r\n    public authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.authStatusListener.subscribe(\r\n      authStatus => {\r\n        this.isLoading = false;\r\n      }\r\n    );\r\n\r\n    this.form = new FormGroup({\r\n      title: new FormControl(null, [Validators.required, Validators.minLength(3)]),\r\n      content: new FormControl(null, Validators.required),\r\n      image: new FormControl(null, {\r\n        validators: [Validators.required],\r\n        asyncValidators: [mimeType]\r\n      })\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 'edit';\r\n        this.postId = paramMap.get('postId');\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId)\r\n          .subscribe(postData => {\r\n          console.log(\"PostCreateComponent -> ngOnInit -> postData\", postData)\r\n            this.isLoading = false;\r\n            this.post = {\r\n              ...postData,\r\n              id: postData._id,\r\n              imagePath: postData.imagePath\r\n            };\r\n            this.form.setValue({\r\n              title: this.post.title,\r\n              content: this.post.content,\r\n              image: this.post.imagePath\r\n            });\r\n          });\r\n\r\n      } else {\r\n        this.mode = 'create';\r\n        this.postId = null;\r\n      }\r\n    })\r\n  }\r\n\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({ image: file });\r\n    this.form.get('image').updateValueAndValidity();\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.imagePreview = (reader.result as string);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n\r\n    if (this.mode === 'create') {\r\n      this.postsService.addPost(\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      );\r\n    }\r\n\r\n    else {\r\n      this.postsService.updatePost(\r\n        this.postId,\r\n        this.form.value.title,\r\n        this.form.value.content,\r\n        this.form.value.image\r\n      )\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n<mat-card class=\"card\">\r\n  <form (ngSubmit)=\"onSavePost()\" [formGroup]=\"form\" *ngIf=\"!isLoading\">\r\n    <mat-form-field class=\"card-field\">\r\n      <input\r\n        matInput\r\n        type=\"text\"\r\n        formControlName=\"title\"\r\n        placeholder=\"Post Title\"\r\n      >\r\n      <mat-error *ngIf=\"form.get('title').invalid\">Please enter a post title.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div>\r\n      <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\r\n      <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\r\n    </div>\r\n\r\n    <div class=\"image-preview\" *ngIf=\"imagePreview !== '' && imagePreview && form.get('image').valid\">\r\n      <img [src]=\"imagePreview\" [alt]=\"form.value.title\" />\r\n    </div>\r\n\r\n    <mat-form-field class=\"card-field\">\r\n      <textarea\r\n        matInput\r\n        rows=\"3\"\r\n        formControlName=\"content\"\r\n        placeholder=\"Post Content\"\r\n      ></textarea>\r\n      <mat-error *ngIf=\"form.get('content').invalid\">Please enter a post content.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <div class=\"button\">\r\n      <button type=\"submit\" mat-raised-button color=\"accent\">Save Post</button>\r\n    </div>\r\n  </form>\r\n\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.scss']\r\n})\r\nexport class PostListComponent implements OnInit, OnDestroy {\r\n  posts: Post[] = [];\r\n  isLoading = false;\r\n  totalPosts = 0;\r\n  postsPerPage = 2;\r\n  currentPage = 1;\r\n  pageSizeOptions = [1, 2, 5, 10];\r\n  userIsAuthenticated = false;\r\n  userId: string;\r\n  private postSub: Subscription;\r\n  private authStatusSub: Subscription;\r\n\r\n  constructor(\r\n    public postsService: PostsService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.userId = this.authService.getUserId();\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n\r\n    this.postSub = this.postsService.postsUpdated\r\n      .subscribe((postData: { posts: Post[], postCount: number }) => {\r\n        this.isLoading = false;\r\n        this.totalPosts = postData.postCount;\r\n        this.posts = postData.posts;\r\n        // console.log(\"PostListComponent -> ngOnInit -> this.posts\", this.posts)\r\n      });\r\n\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n\r\n    // this.authStatusSub = this.authService\r\n    //   .getAuthStatusListener()\r\n    //   .subscribe(isAuthenticated => {\r\n    //     this.userIsAuthenticated = isAuthenticated;\r\n    //   });\r\n\r\n    this.authStatusSub = this.authService.authStatusListener\r\n      .subscribe(isAuthenticated => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n        this.userId = this.authService.getUserId();\r\n      });\r\n\r\n    // this.authService.autoAuthUser();\r\n  }\r\n\r\n  onDelete(postId: string) {\r\n    this.isLoading = true;\r\n    this.postsService.deletePost(postId).subscribe(() => {\r\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n    });\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent) {\r\n    this.currentPage = pageData.pageIndex + 1;\r\n    this.postsPerPage = pageData.pageSize;\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.postSub.unsubscribe();\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n}\r\n","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n\r\n<mat-accordion multi=\"true\" *ngIf=\"posts.length > 0 && !isLoading\">\r\n  <mat-expansion-panel *ngFor=\"let post of posts\">\r\n    <mat-expansion-panel-header>\r\n      {{post.title}}\r\n    </mat-expansion-panel-header>\r\n    <div class=\"post-image\">\r\n      <img [src]=\"post.imagePath\" [alt]=\"post.title\">\r\n    </div>\r\n    <p>{{post.content}}</p>\r\n    <mat-action-row *ngIf=\"userIsAuthenticated && userId === post.creator\">\r\n      <a [routerLink]=\"['/edit', post.id]\" mat-button color=\"primary\">EDIT</a>\r\n      <button mat-button color=\"warn\" (click)=\"onDelete(post.id)\">DELETE</button>\r\n    </mat-action-row>\r\n  </mat-expansion-panel>\r\n</mat-accordion>\r\n\r\n<mat-paginator\r\n  *ngIf=\"posts.length > 0\"\r\n  [length]=\"totalPosts\" \r\n  [pageSize]=\"postsPerPage\" \r\n  [pageSizeOptions]=\"pageSizeOptions\"\r\n  (page)=\"onChangedPage($event)\"\r\n></mat-paginator>\r\n\r\n<p *ngIf=\"posts.length <= 0 && !isLoading\" class=\"mat-body-strong text-center\">No posts added yet!</p>","import { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PostCreateComponent } from './post-create/post-create.component';\r\nimport { PostListComponent } from './post-list/post-list.component';\r\nimport { AngularMaterialModule } from '../angular-material.modules';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PostCreateComponent,\r\n    PostListComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AngularMaterialModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class PostsModule { }","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Post } from './post.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst BACKEND_URL = environment.apiUrl + '/posts/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  public postsUpdated = new Subject<{ posts: Post[], postCount: number }>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { }\r\n\r\n  getPosts(postPerPage: number, currentPage: number) {\r\n    const queryParams = `?pagesize=${postPerPage}&page=${currentPage}`;\r\n\r\n    this.http\r\n      .get<{ message: string, posts: any, maxPosts: number }>(BACKEND_URL + queryParams)\r\n      .pipe(map(postData => {\r\n        return {\r\n          posts: postData.posts.map(post => {\r\n          // console.log(\"PostsService -> getPosts -> post\", post)\r\n            return {\r\n              ...post,\r\n              id: post._id,\r\n              // creator: post.creator,\r\n              // imagePath: post.imagePath\r\n            };\r\n          }),\r\n          maxPosts: postData.maxPosts\r\n        };\r\n      }))\r\n      .subscribe(transformsPostData => {\r\n      // console.log(\"PostsService -> getPosts -> transformsPostData\", transformsPostData)\r\n        this.posts = transformsPostData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformsPostData.maxPosts\r\n        });\r\n      })\r\n  }\r\n\r\n  getPost(id: string) {\r\n    return this.http.get<{ _id: string, title: string, content: string, imagePath: string, creator: string }>(BACKEND_URL + id);\r\n  }\r\n\r\n  addPost(title: string, content: string, image: File) {\r\n    const postData = new FormData();\r\n    postData.append('title', title);\r\n    postData.append('content', content);\r\n    postData.append('image', image, title)\r\n\r\n    this.http\r\n      .post<{ message: string, post: Post }>(BACKEND_URL, postData)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  updatePost(id: string, title: string, content: string, image: File | string) {\r\n    let postData: Post | FormData;\r\n    if (typeof image === 'object') {\r\n      postData = new FormData();\r\n      postData.append('id', id);\r\n      postData.append('title', title);\r\n      postData.append('content', content);\r\n      postData.append('image', image, title);\r\n\r\n    } else {\r\n      postData = { id, title, content, imagePath: image, creator: null };\r\n    }\r\n\r\n    this.http\r\n      .put(BACKEND_URL + '/' + id, postData)\r\n      .subscribe(() => {\r\n        this.router.navigate(['/']);\r\n      });\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    return this.http.delete<{ message: string }>(BACKEND_URL + postId);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}