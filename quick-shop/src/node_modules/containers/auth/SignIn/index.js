import React, { useState } from 'react';
import { TextField, Typography, Paper, Button } from '@material-ui/core';
import { Link } from 'react-router-dom';
import MailOutline from '@material-ui/icons/MailOutline';

import useStyles from 'containers/auth/useStyles';
import { validateControl } from 'selectors';

const SignIn = () => {
  const classes = useStyles()
  const [formControls, setFormControls] = useState({
    email: {
      type: 'email',
      label: 'Email',
      value: '',
      valid: false,
      touched: false,
      errorMessage: 'Enter correct email',
      validation: {
        required: true,
        email: true,
      },
    },
    password: {
      type: 'password',
      label: 'Password',
      value: '',
      valid: false,
      touched: false,
      errorMessage: 'At least 6 characters',
      validation: {
        required: true,
        minLength: 6,
      },
    },
  });

  const handleChange = controlName => event => {
    const newFormControls = { ...formControls };
    const control = newFormControls[controlName];

    control.value = event.target.value;
    control.touched = true;
    control.valid = validateControl(control.value, control.validation);

    setFormControls(newFormControls);
  }

  const renderFormControls = () => {
    return (
      Object.keys(formControls).map((controlName, index) => {
        const control = formControls[controlName];
        const isInvalid = !control.valid && control.touched;
        const helperText = isInvalid
          ? control.errorMessage || "Incorrect entry."
          : "";

        return (
          <div>
            <MailOutline />
            <TextField
              id={`${control.label}-${index}`}
              key={index}
              type={control.type}
              label={control.type}
              value={control.value}
              error={!control.valid && control.touched}
              helperText={helperText}
              className={classes.textField}
              onChange={handleChange(controlName)}
            // onChange={(e) => handleChange(e, controlName)}
            />
          </div>
        )
      })
    );
  };

  return (
    <div className={classes.root}>
      <div className='auth'>
        <Paper elevation={10}>
          <form className={classes.form}>

            <div className={classes.header}>
              <Typography variant='h3' color='primary'>
                Sign In
            </Typography>
              <Typography variant='h3' color='secondary'>
                Sign Up
            </Typography>
            </div>

            {renderFormControls()}

            <Link to="recovery" className={classes.forgotPass}>
              Forgot password?
            </Link>

            <Button variant="contained" color="primary" className={classes.button}>
              Sign In
            </Button>

            <Link to="sign-in" className={classes.privacyPolicy}>
              Privacy Policy
            </Link>

            <Link to="/" className={classes.cancel}>
              Cancel
            </Link>

          </form>
        </Paper>
      </div>
    </div>
  );
}

export default SignIn