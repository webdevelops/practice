import {
  AUTH_REQUEST,
  AUTH_FAILURE,
  AUTH_SUCCESS,
  AUTH_LOGOUT
} from "store/actions/actionTypes";

import { authApi } from 'api';

let response = null;
console.log("TCL: response", response)
export const auth = (email, password, isLogin) => async dispatch => {
  dispatch({
    type: AUTH_REQUEST
  });

  try {
    response = await authApi(email, password, isLogin);
    if (response.error) {
      alert(response.error.message);
    }

    dispatch({
      type: AUTH_SUCCESS,
      payload: response.idToken
    });

    dispatch(autoLogout(response.expiresIn * 10));

  } catch (err) {
    dispatch({
      type: AUTH_FAILURE,
      payload: err,
      error: true,
    });
  }
};

const autoLogout = delay => dispatch => {
  const timerId = setTimeout(() => {
    dispatch(logout());

    clearTimeout(timerId);
  }, delay);
};

export const logout = () => {
  localStorage.removeItem('token');
  localStorage.removeItem('user');
  localStorage.removeItem('expirationDate');

  return {
    type: AUTH_LOGOUT
  };
};

export const autoLogin = () => dispatch => {
  const token = localStorage.getItem('token');
  // console.log("TCL: autoLogin -> token", token)
  if (!token) {
    dispatch(logout());

  } else {
    const expirationDate = new Date(localStorage.getItem('expirationDate'));
    // console.log("TCL: expirationDate", expirationDate)

    if (expirationDate <= new Date()) {
      // console.log("TCL: expirationDate", expirationDate)
      dispatch(logout());

    } else {
      const delay = (expirationDate.getTime() - new Date().getTime());
      console.log("TCL: delay", delay)

      // console.log("TCL: response.idToken", response.idToken)
      dispatch({ type: AUTH_SUCCESS, payload: response.idToken });
      // dispatch(autoLogout(delay));
    }
  }
};