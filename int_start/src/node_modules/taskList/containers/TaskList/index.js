import React, { useState } from 'react'

import TaskHeader from 'taskList/components/TaskHeader'
import Search from 'taskList/components/Search'
import TaskListItem from 'taskList/components/TaskListItem'
import ItemStatusFilter from 'taskList/components/ItemStatusFilter'
import AddTask from 'taskList/components/AddTask'
import {
  createItem,
  toggleProperty,
  search,
  deleteItem,
  filter
} from 'taskList/selectors'

const TaskList = () => {
  const [tasks, setTasks] = useState([
    createItem('Drink Coffee'),
    createItem('Make Awasome App'),
    createItem('Have a lunch')
  ])
  const [term, setTerm] = useState('')
  const [filterTask, setFilterTask] = useState('all')

  const onDeleteTask = id => {
    setTasks(deleteItem(tasks, id))
  }

  const onToggleDone = id => {
    setTasks(toggleProperty(tasks, id, 'done'))
  }

  const onToggleImportant = id => {
    setTasks(toggleProperty(tasks, id, 'important'))
  }

  const onSearchTask = e => {
    setTerm(e.target.value)
  }

  const addTask = name => {
    const newTasks = [...tasks, createItem(name)]
    setTasks(newTasks)
  }

  const onFilterTask = name => {
    setFilterTask(name)
  }

  let visibleTasks = [...tasks]
  visibleTasks = search(visibleTasks, term)
  visibleTasks = filter(visibleTasks, filterTask)

  const renderTaskList = () => {
    return (
      <ul className='list-group mb-3'>
        {
          visibleTasks.map(task => (
            // const {id, ...restTask} = task
            // <li key={id}>
            // <TaskListItem {...restTask} />
            <li key={task.id} className='list-group-item pt-2 pb-2'>
              <TaskListItem
                {...task}
                onToggleDone={() => onToggleDone(task.id)}
                onDeleteTask={() => onDeleteTask(task.id)}
                onToggleImportant={() => onToggleImportant(task.id)}
              />
            </li>
          ))
        }
      </ul>
    )
  }

  const toDoCount = visibleTasks.filter(item => !item.done).length
  const doneCount = visibleTasks.length - toDoCount

  return (
    <div className='task-list d-flex justify-content-center align-items-center p-3'>
      <div>
        <TaskHeader toDo={toDoCount} done={doneCount} />
        <div className='d-flex justify-content-between mb-3'>
          <Search onSearchTask={onSearchTask} />
          <ItemStatusFilter
            onFilterTask={onFilterTask}
            filterTask={filterTask}
          />
        </div>
        {renderTaskList()}
        <AddTask addTask={addTask} />
      </div>
    </div>
  )
}

export default TaskList


// --------------- class Component -------------
// import React, { Component } from "react"

// import TaskHeader from 'taskList/components/TaskHeader'
// import Search from 'taskList/components/Search'
// import ItemStatusFilter from 'taskList/components/ItemStatusFilter'
// import TaskListItem from 'taskList/components/TaskListItem'
// import AddTask from "taskList/components/AddTask"
// import {
//   toggleProperty,
//   deleteItem,
//   search,
//   filter,
//   createItem
// } from "taskList/selectors"

// class TaskList extends Component {
//   constructor(props) {
//     super(props)
//     this.state = {
//       tasks: [
//         createItem('Drink coffe'),
//         createItem('Make Awasome App'),
//         createItem('Have a lunch')
//       ],
//       term: '',
//       filterTask: 'all'
//     }
//     this.onFilterTask = this.onFilterTask.bind(this)
//     this.addTask = this.addTask.bind(this)
//   }

//   onToggleDone(id) {
//     this.setState({
//       tasks: toggleProperty(this.state.tasks, id, 'done')
//     })
//   }

//   onToggleImportant(id) {
//     this.setState({
//       tasks: toggleProperty(this.state.tasks, id, 'important')
//     })
//   }

//   onDeleteTask(id) {
//     this.setState({
//       tasks: deleteItem(this.state.tasks, id)
//     })
//   }

//   onSearchTask = e => {
//     this.setState({
//       term: e.target.value
//     })
//   }

//   onFilterTask(filterTask) {
//     this.setState({ filterTask })
//   }

//   addTask(name) {
//     this.setState({
//       tasks: [
//         ...this.state.tasks,
//         createItem(name)
//       ]
//     })
//   }

//   renderTaskList(visibleTasks) {
//     return (
//       <ul className='list-group mb-3'>
//         {
//           visibleTasks.map(task => (
//             <li key={task.id} className='list-group-item'>
//               <TaskListItem
//                 {...task}
//                 onToggleDone={() => this.onToggleDone(task.id)}
//                 onToggleImportant={() => this.onToggleImportant(task.id)}
//                 onDeleteTask={() => this.onDeleteTask(task.id)}
//               />
//             </li>
//           ))
//         }
//       </ul>
//     )
//   }

//   render() {
//     let visibleTasks = [...this.state.tasks]
//     visibleTasks = search(visibleTasks, this.state.term)
//     visibleTasks = filter(visibleTasks, this.state.filterTask)

//     const toDoCount = visibleTasks.filter(item => !item.done).length
//     const doneCount = visibleTasks.length - toDoCount

//     return (
//       <div className='task-list d-flex justify-content-center align-items-center p-3'>
//         <div>
//           <TaskHeader toDo={toDoCount} done={doneCount} />
//           <div className="d-flex justify-content-between mb-3">
//             <Search onSearchTask={this.onSearchTask} />
//             <ItemStatusFilter
//               onFilterTask={this.onFilterTask}
//               filterTask={this.state.filterTask}
//             />
//           </div>
//           {this.renderTaskList(visibleTasks)}
//           <AddTask addTask={this.addTask} />
//         </div>
//       </div>
//     )
//   }
// }

// export default TaskList