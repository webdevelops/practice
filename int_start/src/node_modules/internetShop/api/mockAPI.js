import mockPhones from './mockPhones'
import mockCategories from './mockCategories'

const key = 'AIzaSyCAAnLfFgNV7glTt8QQeeqRIdF_qo9WSVg'
const signUpURL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${key}`
const signInURL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${key}`

export const authApi = async (email, password, isLogin) => {
  const authData = {
    email,
    password,
    returnSecureToken: true
  }

  const url = isLogin ? signInURL : signUpURL
  const response = await fetch(url, {
    method: 'POST',
    body: JSON.stringify(authData),
    headers: {
      'Content-Type': 'application/app'
    }
  })

  const data = await response.json()
  const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1)

  localStorage.setItem('token', data.idToken)
  localStorage.setItem('userId', data.localId)
  localStorage.setItem('expirationDate', expirationDate)

  if (data.error) {
    return data
  }

  return {
    idToken: data.idToken,
    expiresIn: data.expiresIn
  }
}

const fetchData = async url => {
  return new Promise((resolve, reject) => {
    const timerId = setTimeout(() => {
      if (Math.random() > 0) {
        resolve(url)
      
      } else {
        reject('Be patien please, we will fix it soon.')

        clearTimeout(timerId)
      }
    }, 1000)
  })
}

export const fetchPhonesApi = async () => {
  return await fetchData(mockPhones)
}

export const loadMorePhonesApi = async () => {
  return await fetchData(mockPhones)
}

export const fetchPhoneByIdApi = async id => {
  const phones = await fetchData(mockPhones)
  return phones.find(phone => phone.id === id)
}

export const fetchCategoriesApi = async () => {
  return await fetchData(mockCategories)
}